# This is a weird way of telling Travis to use the fast container-based test
# runner instead of the slow VM-based runner.
sudo: false

language: go

## Force-enable Go modules. This will be unnecessary when Go 1.12 lands.
#env:
#  - GO111MODULE=on

# You don't need to test on very old version of the Go compiler. It's the user's
# responsibility to keep their compilers up to date.
go:
  - 1.11.x

# Only clone the most recent commit.
git:
  depth: 1

# Skip the install step. Don't `go get` dependencies. Only build with the code
# in vendor/
install: true

# Don't email me the results of the test runs.
notifications:
  email: false

# Anything in before_script that returns a nonzero exit code will flunk the
# build and immediately stop. It's sorta like having set -e enabled in bash.
# Make sure golangci-lint is vendored.
before_script:
  - go get -v -t -d ./...
  - mv .env-tests .env

matrix:
  include:
    - services:
        - mysql
      dist: xenial
      before_install:
        - mysql -e 'CREATE DATABASE myapp_test;'
        - mysql -e 'USE myapp_test; CREATE TABLE `categories` (`CategoryID` int(11) NOT NULL AUTO_INCREMENT, `CategoryName` varchar(255) NOT NULL, `CategoryDescription` text DEFAULT NULL, PRIMARY KEY (`CategoryID`), UNIQUE KEY `categories_CategoryName_uindex` (`CategoryName`) ) ENGINE=InnoDB AUTO_INCREMENT=2;'
        - mysql -e 'USE myapp_test; INSERT INTO `categories` (CategoryID, CategoryName, CategoryDescription) VALUES ("1","Programowanie","Wpisy na temat programowania, projekt√≥w, itp.");'

# script always runs to completion (set +e). If we have linter issues AND a
# failing test, we want to see both. Configure golangci-lint with a
# .golangci.yml file at the top level of your repo.
script:
  - go build -v .
#  - go test -v -race ./...  # Run all the tests with the race detector enabled